declare
  psal emp.deptno%type;
  pdeptno emp.deptno%type;
  cursor cemp is select sal,deptno from emp order by deptno;
  counts201 number :=0;counts202 number :=0;counts203 unmber :=0;
  s20_sal number :=0;
  counts301 number :=0;counts302 number :=0;counts303 unmber :=0;
  s30_sal number :=0;
  counts401 number :=0;counts402 number :=0;counts403 unmber :=0;
  s40_sal number :=0;
  counts501 number :=0;counts502 number :=0;counts503 unmber :=0;
  s50_sal number :=0;
begin
  open cemp;
    loop
      fetch cemp into psal,pdeptno;
      exit wher cemp%notfound;
      if pdeptno='20'
        then s20_sal:=s20_sal+psal;
        
create [or replace] trigger
{before|after}
create or replace trigger checkSal
before update of sal
on emp
for each row
begin
  if :new.sal<:old.sal then
    raise_application_eooro(-20001,'');
  end if;
end;
create or replace trigger checkLimit
before insert 
on emp
for each row
declare
  num number :=0;
begin
  select count(*) into num from emp where deptno=:new.deptno;
  if num+1>5 then
    raise_application_error(-20001,'');
  en if;
end;
create or replace trigger checkLimit create or replace trigger checkLimit
create procedure create procedure create procedure create procedure create procedure
create or replace procedure sayHelloWorld
as
begin
  dbms_output.put_line('HelloWorld');
end;

create or replace procedure sayHelloWorld
as
begin
  dbms_output.put_line('HelloWorld');
end;
set serveroutput on exec sayHelloWorld(); HeoolwWorld! procedure successfully completed procedure successfully completed sayHello
exec sayHelloWorld();
create or replace procedure raiseSalary(eno in number)
as
  psal emp.sal%type
begin
  select sal into psal from emp where empno=eno;
  update emp set sal=sal+100 where empno=eno;
  dbms_output.put_line('');
end;

create or replace procedure raiseSalsry(eno in number)
as
  psal emp.sal%type
begin
  select sal into psal from emp where empno=eno;
  update emp set sal=sal+100 where empno=eno;
  dbms_output.put_line('');
end;

create or replace procedure raiseSalsry(eno in number)
as
  psal emp.sal%type
begin
  select sal into psal from emp where empno=eno;
  update emp set sal=sal+100 where empno=eno;
  dbms_output.put_line('');
end;
create or replace prcedure raiseSalaryByCondition(eno in number,rsal in number)
as
  psal emp.sal%type
begin
  select sal into psal from emp where empnp=eno;
  update emp set sal=sal+rsal where empno=eno;
  dbms_output.put_line('')
end;

create [or replace] finction a()
return
as
create or replace function queryEmpIncome(eno in number)
return number 
as 
  psal emo.sal%type;
  pcomm emp.comm%type;
begin
  select sal,comm into psal.pcomm from emp where empno=eno;
  return psal*12+nv1(pcomm,0);
end;

create or replace procedure queryEmpInfo(eno in number,pename put varchar2,psal out number,pjob out varchar2)
as
begin
  select ename,sal,job into pename,psal,pjob from emp where empno=eno;
end;

create or replace procedure queryEmpInfo(eno in number,pename out varchar2,)
as
begin
  select ename,sal,job into pename,psal,pjob from emo where empno=eno;
end;

set serveroutput on
declare 
  eno number;
  pename varchar2(200);
  psal number;
  pjob varchar2(200);
begin
  eno:=1110;
  quryEmpInfo(
      eno=>emo,
      pename=>pename,
      psal=>psal,
      pjob=>pjob);
  dbms_outpu.put_line('');
end;

set serveroutpu on 
declare
  eno number;
  pename varchar2(200);
  psal number;
  pjob varchar2(200);
begin
  eno:=1110;
  queryEmpInfo(
      eno=>eno,
      pename=>pename,
      psal=>psal,
      pjob=>pjob);
  dbms_output.put_line('')
end;
static{
    try{
        Class.forName(driver);
    }catch(ClassNotFoundException e){
        e.printStackTrace();
    }
}
 public static Connection getConnection(){
     try{
         return DriverManager.getConnection(url.user.password);
     }catch(SQLException e){
         e.printStackTrace();
     }
     return null;
 }
 
 cursor
